<Application
    x:Class="EA_Dashboard.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:EA_Dashboard"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    StartupUri="Views/MainWindowView.xaml">

    <Application.Resources>

        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/ColorsAndBrushes.xaml" />
                <!--<materialDesign:BundledTheme BaseTheme="Dark" PrimaryColor="DeepPurple" SecondaryColor="Lime" />-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DatePicker.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PasswordBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ValidationErrorTemplate.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Menu.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Indigo.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />


                <!--  Styles  -->
                <ResourceDictionary Source="Converters/Converters.xaml" />
                <ResourceDictionary Source="Styles/TemplatesAndLayouts.xaml" />
                <ResourceDictionary Source="Styles/DefaultStyles.xaml" />
                <ResourceDictionary Source="Styles/ResponsiveSizes.xaml" />
                
            </ResourceDictionary.MergedDictionaries>

            <!--  ViewModels  -->
            <!--<DataTemplate DataType="{x:Type vm:ViewModel}">
                <views:View/>
            </DataTemplate>-->


            <!--  Colors  -->

            <!--  Main Window Background  -->
            <LinearGradientBrush x:Key="mainWindowViewBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="White" />
                <GradientStop Offset="1" Color="Silver" />
            </LinearGradientBrush>

            <!--  Header & Toolbar  -->
            <SolidColorBrush x:Key="appBarBackgroundColor" Color="Red" />
            <SolidColorBrush x:Key="appBarForegroundColor" Color="White" />

            <!--  Strings  -->
            <sys:String x:Key="AppTitle">TheTitle</sys:String>


            <!--  Styles  -->

            <!--  Text Block  -->
            <Style x:Key="fieldType1" TargetType="TextBlock">
                <Setter Property="FontWeight" Value="DemiBold" />
                <Setter Property="FontSize" Value="13" />
            </Style>
            <Style x:Key="fieldType2" TargetType="TextBlock">
                <Setter Property="FontWeight" Value="DemiBold" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Foreground" Value="OrangeRed" />
            </Style>

            <!--  Text Box  -->
            <Style x:Key="inputType1" TargetType="TextBox">
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Padding" Value="2" />
            </Style>

            <Style x:Key="inputType2" TargetType="TextBox">
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Padding" Value="2" />
            </Style>

            <Style x:Key="comboInputType1" TargetType="ComboBox">
                <Setter Property="FontSize" Value="13" />
                <Setter Property="IsEditable" Value="True" />
            </Style>

            <!--  Combobox  -->
            <Style x:Key="cmbType1" TargetType="ComboBox">
                <Setter Property="IsEditable" Value="True" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>

            <!--  Buttons  -->
            <Style x:Key="defaultBtn" TargetType="Button">
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="Black"
                                BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="#FF433257" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#FFF70C0C" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="transparentBtn" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="BorderBrush" Value="Black" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="8">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Red" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style
                x:Key="transparentFloatingButton"
                BasedOn="{StaticResource MaterialDesignFloatingActionButton}"
                TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="Black" />
            </Style>

            <Style
                x:Key="appMaterialLockButton"
                BasedOn="{StaticResource MaterialDesignIconForegroundButton}"
                TargetType="Button">
                <Setter Property="Width" Value="20" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Margin" Value="3,0,3,0" />
            </Style>

            <Style x:Key="toolbarBtn" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Margin" Value="0,0,3,0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Width" Value="30" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="Transparent"
                                BorderThickness="0">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Orange" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.7" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--  RadioButtons  -->
            <Style x:Key="radioBtnType1" TargetType="RadioButton">
                <Setter Property="FontSize" Value="13" />

            </Style>

            <!--  CheckBox  -->
            <Style x:Key="checkBoxType1" TargetType="CheckBox">
                <Setter Property="FontSize" Value="13" />
            </Style>

            <!--  TabControl  -->
            <Style x:Key="tabControlType1" TargetType="TabControl" />

            <!--  TabItem  -->
            <Style x:Key="tabItemType1" TargetType="TabItem">
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid Name="Panel">
                                <ContentPresenter
                                    x:Name="ContentSite"
                                    Margin="10,2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ContentSource="Header" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Panel" Property="Background" Value="Silver" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Panel" Property="Background" Value="Black" />
                                    <Setter Property="Foreground" Value="Orange" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Containers  -->
            <Style x:Key="centeredContainer" TargetType="Grid">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>

            <Style x:Key="appMainContainerFade" TargetType="{x:Type Grid}">
                <Style.Triggers>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Opacity"
                                        From="0"
                                        Duration="0:00:.600" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                    <Trigger Property="Visibility" Value="Collapsed">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Opacity"
                                        From="1"
                                        Duration="0:00:.600" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="viewMainContainerFade" TargetType="{x:Type UserControl}">
                <Style.Triggers>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Opacity"
                                        From="0"
                                        Duration="0:00:.600" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                    <Trigger Property="Visibility" Value="Collapsed">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Opacity"
                                        From="1"
                                        Duration="0:00:.600" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--  Icons  -->
            <Style x:Key="toolbarIcon" TargetType="materialDesign:PackIcon">
                <Setter Property="Foreground" Value="{StaticResource appBarForegroundColor}" />
                <Setter Property="Width" Value="25" />
                <Setter Property="Height" Value="25" />
            </Style>


        </ResourceDictionary>

    </Application.Resources>

</Application>
